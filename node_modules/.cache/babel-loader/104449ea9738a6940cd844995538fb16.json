{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _hslToHex = _interopRequireDefault(require(\"hsl-to-hex\"));\n\nvar _colorString = _interopRequireDefault(require(\"color-string\"));\n\nvar isRgb = R.test(/rgb/g);\nvar isRgba = R.test(/rgba/g);\nvar isHsl = R.test(/hsl/g);\nvar isHsla = R.test(/hsla/g);\n/**\n * Transform rgb color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\nvar parseRgb = R.compose(_colorString.default.to.hex, _colorString.default.get.rgb);\n/**\n * Transform Hsl color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\nvar parseHsl = R.compose(R.toUpper, R.apply(_hslToHex.default), R.map(Math.round), _colorString.default.get.hsl);\n/**\n * Transform given color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\nvar transformColor = function transformColor(value) {\n  return R.cond([[isRgba, parseRgb], [isRgb, parseRgb], [isHsla, parseHsl], [isHsl, parseHsl], [R.T, R.always(value)]])(value);\n};\n\nvar _default = transformColor;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}