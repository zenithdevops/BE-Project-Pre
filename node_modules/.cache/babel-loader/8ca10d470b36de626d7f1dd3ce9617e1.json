{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _yoga = _interopRequireDefault(require(\"@react-pdf/yoga\"));\n\nvar _getRatio = _interopRequireDefault(require(\"./getRatio\"));\n\nvar _getMargin = _interopRequireDefault(require(\"../node/getMargin\"));\n\nvar _getPadding = _interopRequireDefault(require(\"../node/getPadding\"));\n\nvar _isHeightAuto = _interopRequireDefault(require(\"../page/isHeightAuto\"));\n\nvar SAFETY_HEIGHT = 10;\n/**\n * Yoga image measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} image width and height\n */\n\nvar measureImage = function measureImage(page, node, width, widthMode, height, heightMode) {\n  var imageRatio = (0, _getRatio.default)(node);\n  var imageMargin = (0, _getMargin.default)(node);\n  var pagePadding = (0, _getPadding.default)(page);\n  var pageArea = (0, _isHeightAuto.default)(page) ? Infinity : page.box.height - pagePadding.paddingTop - pagePadding.paddingBottom - imageMargin.marginTop - imageMargin.marginBottom - SAFETY_HEIGHT; // Skip measure if image data not present yet\n\n  if (!node.image) return {\n    width: 0,\n    height: 0\n  };\n\n  if (widthMode === _yoga.default.MEASURE_MODE_EXACTLY && heightMode === _yoga.default.MEASURE_MODE_UNDEFINED) {\n    var scaledHeight = width / imageRatio;\n    return {\n      height: Math.min(pageArea, scaledHeight)\n    };\n  }\n\n  if (heightMode === _yoga.default.MEASURE_MODE_EXACTLY && (widthMode === _yoga.default.MEASURE_MODE_AT_MOST || widthMode === _yoga.default.MEASURE_MODE_UNDEFINED)) {\n    return {\n      width: Math.min(height * imageRatio, width)\n    };\n  }\n\n  if (widthMode === _yoga.default.MEASURE_MODE_EXACTLY && heightMode === _yoga.default.MEASURE_MODE_AT_MOST) {\n    var _scaledHeight = width / imageRatio;\n\n    return {\n      height: Math.min(height, pageArea, _scaledHeight)\n    };\n  }\n\n  if (widthMode === _yoga.default.MEASURE_MODE_AT_MOST && heightMode === _yoga.default.MEASURE_MODE_AT_MOST) {\n    if (imageRatio > 1) {\n      return {\n        width: width,\n        height: Math.min(width / imageRatio, height)\n      };\n    }\n\n    return {\n      height: height,\n      width: Math.min(height * imageRatio, width)\n    };\n  }\n\n  return {\n    height: height,\n    width: width\n  };\n};\n\nvar _default = R.curryN(6, measureImage);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}