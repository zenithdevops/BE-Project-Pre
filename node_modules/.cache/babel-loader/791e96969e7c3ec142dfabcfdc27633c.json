{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _length = _interopRequireDefault(require(\"../run/length\"));\n\nvar _advanceWidth = _interopRequireDefault(require(\"../run/advanceWidth\"));\n\nvar _indexAtOffset = _interopRequireDefault(require(\"../run/indexAtOffset\"));\n/**\n * Get string index at offset\n *\n * @param  {Object}  attributed string\n * @param  {number}  offset\n * @return {number} string index at offset N\n */\n\n\nvar indexAtOffset = function indexAtOffset(offset, string) {\n  var index = 0;\n  var counter = 0;\n  var runs = R.propOr([], 'runs', string);\n\n  for (var i = 0; i < runs.length; i += 1) {\n    var run = runs[i];\n    var advanceWidth = (0, _advanceWidth.default)(run);\n\n    if (counter + advanceWidth > offset) {\n      return index + (0, _indexAtOffset.default)(offset - counter, run);\n    }\n\n    counter += advanceWidth;\n    index += (0, _length.default)(run);\n  }\n\n  return index;\n};\n\nvar _default = R.curryN(2, indexAtOffset);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}