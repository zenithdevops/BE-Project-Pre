{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _yoga = _interopRequireDefault(require(\"@react-pdf/yoga\"));\n\nvar isRow = R.equals('row');\nvar isRowReverse = R.equals('row-reverse');\nvar isColumnReverse = R.equals('column-reverse');\n/**\n * Set flex direction attribute to node's Yoga instance\n *\n * @param {String} flex direction value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setFlexDirection = function setFlexDirection(value) {\n  return R.tap(function (node) {\n    var yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      var yogaValue = R.cond([[isRow, R.always(_yoga.default.FLEX_DIRECTION_ROW)], [isRowReverse, R.always(_yoga.default.FLEX_DIRECTION_ROW_REVERSE)], [isColumnReverse, R.always(_yoga.default.FLEX_DIRECTION_COLUMN_REVERSE)], [R.T, R.always(_yoga.default.FLEX_DIRECTION_COLUMN)]])(value);\n      yogaNode.setFlexDirection(yogaValue);\n    }\n  });\n};\n\nvar _default = setFlexDirection;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}