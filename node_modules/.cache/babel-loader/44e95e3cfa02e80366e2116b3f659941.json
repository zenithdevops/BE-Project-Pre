{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _unicodeProperties = _interopRequireDefault(require(\"@react-pdf/unicode-properties\"));\n\nvar _empty = _interopRequireDefault(require(\"../../attributedString/empty\"));\n\nvar ignoredScripts = ['Common', 'Inherited', 'Unknown'];\n/**\n * Resolves unicode script in runs, grouping equal runs together\n *\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Object} attributed string\n */\n\nvar scriptItemizer = function scriptItemizer(options, attributedString) {\n  var string = attributedString.string;\n  var lastScript = 'Unknown';\n  var lastIndex = 0;\n  var index = 0;\n  var res = [];\n  if (!string) return (0, _empty.default)();\n\n  for (var i = 0; i < string.length; i += 1) {\n    var char = string[i];\n    var codePoint = char.codePointAt();\n\n    var script = _unicodeProperties.default.getScript(codePoint);\n\n    if (script !== lastScript && !ignoredScripts.includes(script)) {\n      if (lastScript !== 'Unknown') {\n        res.push({\n          start: lastIndex,\n          end: index,\n          attributes: {\n            script: lastScript\n          }\n        });\n      }\n\n      lastIndex = index;\n      lastScript = script;\n    }\n\n    index += char.length;\n  }\n\n  if (lastIndex < string.length) {\n    res.push({\n      start: lastIndex,\n      end: string.length,\n      attributes: {\n        script: lastScript\n      }\n    });\n  }\n\n  return {\n    string: string,\n    runs: res\n  };\n};\n\nvar _default = R.curryN(2, scriptItemizer);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}