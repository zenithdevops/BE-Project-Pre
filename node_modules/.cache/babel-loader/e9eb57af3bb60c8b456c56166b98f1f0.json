{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _getDefs = _interopRequireDefault(require(\"./getDefs\"));\n\nvar isDefs = R.propEq('type', P.Defs);\nvar isNotDefs = R.complement(isDefs);\nvar detachDefs = R.evolve({\n  children: R.filter(isNotDefs)\n});\nvar URL_REGEX = /url\\(['\"]?#([^'\"]+)['\"]?\\)/;\n\nvar replaceDef = function replaceDef(defs) {\n  return R.compose(R.when(R.test(URL_REGEX), R.compose(R.prop(R.__, defs), R.prop(1), R.match(URL_REGEX))), R.defaultTo(''));\n};\n\nvar parseNodeDefs = function parseNodeDefs(defs) {\n  return function (node) {\n    return R.compose(R.evolve({\n      props: R.evolve({\n        fill: replaceDef(defs),\n        clipPath: replaceDef(defs)\n      })\n    }), R.evolve({\n      children: R.map(parseNodeDefs(defs))\n    }))(node);\n  };\n};\n\nvar parseDefs = function parseDefs(root) {\n  var defs = (0, _getDefs.default)(root);\n  return R.evolve({\n    children: R.map(parseNodeDefs(defs))\n  }, root);\n};\n\nvar replaceDefs = R.compose(detachDefs, parseDefs);\nvar _default = replaceDefs;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}