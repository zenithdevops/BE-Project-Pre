{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _yoga = _interopRequireDefault(require(\"@react-pdf/yoga\"));\n\nvar _layoutText = _interopRequireDefault(require(\"./layoutText\"));\n\nvar _linesWidth = _interopRequireDefault(require(\"./linesWidth\"));\n\nvar _linesHeight = _interopRequireDefault(require(\"./linesHeight\"));\n/* eslint-disable no-param-reassign */\n\n\nvar ALIGNMENT_FACTORS = {\n  center: 0.5,\n  right: 1\n};\n/**\n * Yoga text measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} text width and height\n */\n\nvar measureText = function measureText(page, node, fontStore, width, widthMode, height) {\n  if (widthMode === _yoga.default.MEASURE_MODE_EXACTLY) {\n    if (!node.lines) node.lines = (0, _layoutText.default)(node, width, height, fontStore);\n    return {\n      height: (0, _linesHeight.default)(node)\n    };\n  }\n\n  if (widthMode === _yoga.default.MEASURE_MODE_AT_MOST) {\n    var _node$style;\n\n    var alignFactor = ALIGNMENT_FACTORS[(_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.textAlign] || 0;\n\n    if (!node.lines) {\n      node.lines = (0, _layoutText.default)(node, width, height, fontStore);\n      node.alignOffset = (width - (0, _linesWidth.default)(node)) * alignFactor; // Compensate align in variable width containers\n    }\n\n    return {\n      height: (0, _linesHeight.default)(node),\n      width: Math.min(width, (0, _linesWidth.default)(node))\n    };\n  }\n\n  return {};\n};\n\nvar _default = R.curryN(7, measureText);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}