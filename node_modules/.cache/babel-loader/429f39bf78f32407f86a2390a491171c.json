{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n/* eslint-disable no-await-in-loop */\n\n/**\n * Performs right-to-left function composition with async functions support\n *\n * @param  {...any} functions\n */\n\n\nvar asyncCompose = function asyncCompose() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(value) {\n      var result,\n          reversedFns,\n          _len2,\n          args,\n          _key2,\n          i,\n          fn,\n          _args = arguments;\n\n      return _regenerator.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              result = value;\n              reversedFns = R.reverse(fns);\n\n              for (_len2 = _args.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                args[_key2 - 1] = _args[_key2];\n              }\n\n              i = 0;\n\n            case 4:\n              if (!(i < reversedFns.length)) {\n                _context.next = 12;\n                break;\n              }\n\n              fn = reversedFns[i];\n              _context.next = 8;\n              return fn.apply(void 0, [result].concat(args));\n\n            case 8:\n              result = _context.sent;\n\n            case 9:\n              i += 1;\n              _context.next = 4;\n              break;\n\n            case 12:\n              return _context.abrupt(\"return\", result);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nvar _default = asyncCompose;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}